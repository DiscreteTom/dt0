import { Context } from "../src/context/index.js";
import { newParserBuilder, entry } from "../src/parser/index.js";
import { writeFileSync } from "fs";
import util from "node:util";
import prettier from "prettier";

// Usage: ts-node utils/serialize.ts

const ctx = new Context();

const { serializable } = newParserBuilder(ctx).build({
  entry,
  checkAll: true,
  serialize: true,
});

const content = [
  `// generated by utils/serialize.ts`,
  "",
  "// comment all lines and uncomment the next line to re-generate the data",
  "// export const serialized = undefined;",
  "",
  `export const serialized = ${util.inspect(serializable, {
    maxArrayLength: Infinity,
    maxStringLength: Infinity,
    // depth should be infinity, set it to a limited number in case of circular references
    depth: 10,
  })};`,
].join("\n");

prettier.format(content, { parser: "typescript" }).then((content) => {
  writeFileSync("src/parser/serialized.ts", content, "utf-8");
});

// TODO: add test
